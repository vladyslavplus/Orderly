services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - orderly-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 5s
      timeout: 5s
      retries: 15
    restart: unless-stopped
    networks:
      - orderly-network

  mailpit:
    image: axllent/mailpit:latest
    ports:
      - "8025:8025"  
      - "1025:1025"  
    restart: unless-stopped
    networks:
      - orderly-network

  userservice:
    build:
      context: ./dotnet
      dockerfile: ./UserService/Dockerfile
    ports:
      - "5002:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: Host=postgres;Port=5432;Username=postgres;Password=12345678;Database=orderly-userservice-db;
      Jwt__PrivateKeyPath: "/etc/keys/private_key.pem"
      Jwt__PublicKeyPath: "/etc/keys/public_key.pem"
      Jwt__Issuer: "UserService"
      Jwt__Audience: "Client"
      Jwt__AccessTokenExpirationMinutes: "60"
      RabbitMq__Host: rabbitmq
      RabbitMq__Username: guest
      RabbitMq__Password: guest
    volumes:
      - ./dotnet/UserService/Keys/private_key.pem:/etc/keys/private_key.pem:ro
      - ./dotnet/UserService/Keys/public_key.pem:/etc/keys/public_key.pem:ro
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - orderly-network

  productservice:
    build:
      context: ./dotnet
      dockerfile: ./ProductService/Dockerfile
    ports:
      - "5003:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: Host=postgres;Port=5432;Username=postgres;Password=12345678;Database=orderly-productservice-db;
      Jwt__PublicKeyPath: "/etc/keys/public_key.pem"
      Jwt__Issuer: "UserService"
      Jwt__Audience: "Client"
      RabbitMq__Host: rabbitmq
      RabbitMq__Username: guest
      RabbitMq__Password: guest
    volumes:
      - ./dotnet/UserService/Keys/public_key.pem:/etc/keys/public_key.pem:ro
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - orderly-network

  cartservice:
    build:
      context: ./java/cartservice
      dockerfile: ./src/main/docker/Dockerfile.jvm
    ports:
      - "5004:8080"
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgres:5432/orderly-cartservice-db"
      QUARKUS_DATASOURCE_USERNAME: "postgres"
      QUARKUS_DATASOURCE_PASSWORD: "12345678"
      
      MP_JWT_VERIFY_PUBLICKEY_LOCATION: "file:/etc/keys/public_key.pem"
      MP_JWT_VERIFY_ISSUER: "UserService"
      MP_JWT_VERIFY_AUDIENCES: "Client"
      MP_JWT_TOKEN_HEADER: "Authorization"
      MP_JWT_VERIFY_ALGORITHM: "RS256"

      MP_JWT_VERIFY_GROUPS_PATH: "role"
      SMALLRYE_JWT_PATH_GROUPS: "role"
      SMALLRYE_JWT_CLAIMS_GROUPS: "role"

      SMALLRYE_JWT_REQUIRE_NAMED_PRINCIPAL: "false"
      SMALLRYE_JWT_PATH_MAPPING: "/=/"
      
      QUARKUS_LOG_CATEGORY_IO_SMALLRYE_JWT_LEVEL: "DEBUG"
      QUARKUS_LOG_CATEGORY_IO_QUARKUS_SECURITY_LEVEL: "DEBUG"
      QUARKUS_LOG_LEVEL: "DEBUG"
      
      QUARKUS_SWAGGER_UI_ALWAYS_INCLUDE: "true"
      QUARKUS_SWAGGER_UI_PERSIST_AUTHORIZATION: "true"
      QUARKUS_SMALLRYE_OPENAPI_SECURITY_SCHEME: "jwt"
      QUARKUS_SMALLRYE_OPENAPI_SECURITY_SCHEME_NAME: "bearerAuth"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
       - ./dotnet/UserService/Keys/public_key.pem:/etc/keys/public_key.pem:ro
    restart: unless-stopped
    networks:
      - orderly-network

  orderservice:
    build:
      context: ./java/orderservice
      dockerfile: ./src/main/docker/Dockerfile.jvm
    ports:
      - "9090:9090"
      - "5005:8080"
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgres:5432/orderly-orderservice-db"
      QUARKUS_DATASOURCE_USERNAME: "postgres"
      QUARKUS_DATASOURCE_PASSWORD: "12345678"

      MP_JWT_VERIFY_PUBLICKEY_LOCATION: "file:/etc/keys/public_key.pem"
      MP_JWT_VERIFY_ISSUER: "UserService"
      MP_JWT_VERIFY_AUDIENCES: "Client"
      MP_JWT_TOKEN_HEADER: "Authorization"
      MP_JWT_VERIFY_ALGORITHM: "RS256"

      MP_JWT_VERIFY_GROUPS_PATH: "role"
      SMALLRYE_JWT_PATH_GROUPS: "role"
      SMALLRYE_JWT_CLAIMS_GROUPS: "role"

      SMALLRYE_JWT_REQUIRE_NAMED_PRINCIPAL: "false"
      SMALLRYE_JWT_PATH_MAPPING: "/=/"
      
      QUARKUS_LOG_CATEGORY_IO_SMALLRYE_JWT_LEVEL: "DEBUG"
      QUARKUS_LOG_CATEGORY_IO_QUARKUS_SECURITY_LEVEL: "DEBUG"
      QUARKUS_LOG_LEVEL: "DEBUG"

      QUARKUS_SWAGGER_UI_ALWAYS_INCLUDE: "true"
      QUARKUS_SWAGGER_UI_PERSIST_AUTHORIZATION: "true"
      QUARKUS_SMALLRYE_OPENAPI_SECURITY_SCHEME: "jwt"
      QUARKUS_SMALLRYE_OPENAPI_SECURITY_SCHEME_NAME: "bearerAuth"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./dotnet/UserService/Keys/public_key.pem:/etc/keys/public_key.pem:ro
    restart: unless-stopped
    networks:
      - orderly-network

  notificationservice:
    build:
      context: ./java/notificationservice
      dockerfile: ./src/main/docker/Dockerfile.jvm
    ports:
      - "9091:9091"   
      - "5006:8080"   
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgres:5432/orderly-notificationservice-db"
      QUARKUS_DATASOURCE_USERNAME: "postgres"
      QUARKUS_DATASOURCE_PASSWORD: "12345678"
      
      QUARKUS_MAILER_FROM: "noreply@orderly.local"
      QUARKUS_MAILER_HOST: "mailpit" 
      QUARKUS_MAILER_PORT: "1025"
      QUARKUS_MAILER_START_TLS: "DISABLED"

      QUARKUS_GRPC_SERVER_PORT: "9091"
      QUARKUS_GRPC_SERVER_PLAIN_TEXT: "true"
      QUARKUS_HTTP_PORT: "8080"
    depends_on:
      postgres:
        condition: service_healthy
      mailpit:
        condition: service_started
    restart: unless-stopped
    networks:
      - orderly-network

volumes:
  pgdata:

networks:
  orderly-network:
    driver: bridge